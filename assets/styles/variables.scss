// Variables
$color-1: #fff;
$color-2: #eaeaea;
$color-3: #e31019;
$color-4: #121011;
$color-5: #000;
$color-6: #858585;
$color-7: #828282;
$color-8: #f3f3f3;
$light-box-shadow: 10px 10px 40px -12px rgba(0,0,0,0.4);
$base-border: 1px solid;
$border: $base-border rgba($color-5, 0.15);
$border-darker: $base-border rgba($color-5, 0.2);

// Durations
$short: 200ms;
$medium: 300ms;
$long: 500ms;
$longer: 750ms;

// Font Sizes
:root {
  --font-50: 50px;
  --font-35: 35px;
  --font-30: 30px;
  --font-26: 26px;
  --font-24: 24px;
  --font-22: 22px;
  --font-18: 18px;
  --font-17: 17px;
  --font-16: 16px;
  --font-15: 15px;
  --font-14: 14px;
  --font-13: 13px;
  --font-12: 12px;
}
@media screen and (max-width: 720px) {
  :root {
    --font-50: 30px;
    --font-35: 30px;
    --font-30: 28px;
    --font-26: 24px;
    --font-25: 22px;
    --font-24: 20px;
    --font-22: 20px;
    --font-15: 14px;
  }
}
// Functions
@function transition($property, $duration) {
  @return $property $duration cubic-bezier(.53,.1,.58,1);
}

// Mixins
@mixin inter {
  font-family: 'Inter', 'Poppins', sans-serif;
}
@mixin header($font-size: inherit, $font-weight: 300, $letter-spacing: normal, $text-transform: uppercase) {
  font-size: $font-size;
  font-weight: $font-weight;
  letter-spacing: $letter-spacing;
  text-transform: $text-transform;
}
@mixin button($background, $color: inherit, $background-hover: inherit, $color-hover: inherit) {
  transition: transition($medium, background-color), transition($medium, color);
  background-color: $background;
  color: $color;
  font-weight: 400;
  padding: 12px 35px;
  text-transform: lowercase;
  border-radius: 10px;
  height: fit-content;
  width: fit-content;
  font-size: var(--font-14);
  &:hover {
    background-color: $background-hover;
    color: $color-hover;
  }
}
@mixin shadow($background) {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  z-index: 0;
  width: 100%;
  height: 100%;
  background: $background;
}
@mixin p($font-size: var(--font-15), $line-height: 30px) {
  font-size: $font-size;
  line-height: $line-height;
}
@mixin element-index {
  * {
    z-index: 1;
  }
}
@mixin figure {
  figure {
    overflow-y: hidden;
    place-self: center;
    background-image: url("/assets/svgs/red.svg");
    background-size: contain;
    background-repeat: no-repeat;
    background-position: 50% 70%;
    display: flex;
    justify-content: center;
    align-items: center;
    grid-column: 1 / span 5;
    grid-row: 1 / span 5;
    height: fit-content;
    width: fit-content;
    img {
      pointer-events: none;
      user-select: none;
      width: 60%;
      height: auto;
      transition: transition($longer, transform);
      &:first-child {
        width: 12%;
        margin-right: 70px;
        transform: translateY(-500px);
        &.done {
          transform: translateY(-50px);
        }
      }
      &:nth-child(2) {
        transform: scale(0.8);
        &.done {
          transform: scale(1);
        }
      }
      &:last-child {
        width: 10%;
        margin-left: -45px;
        transform: translateY(500px);
        &.done {
          transform: translateY(40px);
        }
      }
    }
  }
}
@mixin navigation {
  & > div:first-of-type {
    transform: translateX(-70px);
    color: $color-6;
    font-size: var(--font-12);
    font-weight: 400;
    a:hover {
      text-decoration: underline;
    }
    span {
      &:first-of-type {
        margin: 0 10px;
      }
      &:nth-of-type(odd) {
        margin: 0 10px;
      }
      &:last-of-type {
        color: $color-5;
      }
    }
  }
}
@mixin main($sides) {
  margin: 110px $sides 70px $sides;
}
@mixin figure-date {
  figure {
    position: relative;
    div {
      position: absolute;
      top: 10px;
      left: 10px;
      @include button($color-5, $color-1, $color-5, $color-1);
    }
    img {
      width: 100%;
      height: auto;
    }
  }
}
@mixin gallery {
  div {
    cursor: pointer;
    position: relative;
    width: 400px;
    height: 400px;
    &::before {
      transition: transition($long, opacity);
      opacity: 0;
      @include shadow(rgba($color-5, 0.55));
    }
    &:hover::before {
      opacity: 1;
      background-image: url("/assets/svgs/japanese.svg");
      background-size: 35% 35%;
      background-position: 50% 50%;
      background-repeat: no-repeat;
    }
  }
}
@mixin show-image {
  .show-image {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba($color-5, 0.5);
    z-index: 3;
    display: flex;
    justify-content: center;
    align-items: center;
    & > div {
      transition: transition($long, transform);
      position: relative;
      background-color: $color-1;
      width: 35%;
      @media screen and (max-width: 1280px) {
        height: 50%;
      }
      @media screen and (max-width: 720px) {
        width: 90%;
      }
      height: 75%;
      border-radius: 25px;
      box-shadow: $light-box-shadow;
      transform: translateY(200%);
      &.done {
        transform: none;
      }
    }
    img {
      border-radius: 25px 25px 0 0;
      user-select: none;
      pointer-events: none;
      width: 100%;
      height: auto;
    }
    p {
      text-align: center;
    }
    svg {
      position: absolute;
      top: 20px;
      right: 20px;
      cursor: pointer;
      width: 30px;
      height: 30px;
      color: $color-2;
      transition: transition($medium, color);
      &:hover {
        color: $color-3;
      }
    }
  }
}
@mixin scroller {
  & > div:last-of-type {
    margin: 70px auto 0 auto;
    width: 40%;
    @media screen and (max-width: 720px) {
      width: 100%;
    }
    display: grid;
    place-items: center;
    grid-template-columns: repeat(auto-fit, minmax(10px, 1fr));
    span {
      @include p;
      user-select: none;
      &:not(.dot) {
        cursor: pointer;
      }
      transition: transition($short, color);
      &:first-of-type, &:last-of-type {
        @include inter;
        font-size: var(--font-24);
        @media screen and (max-width: 720px) {
          font-size: var(--font-26);
        }
      }
      &:first-of-type {
        place-self: center start;
      }
      &:last-of-type {
        place-self: center end;
      }
      &:not(.dot):hover {
        color: $color-3;
      }
      &.current {
        font-weight: 600;
        color: $color-3;
      }
    }
  }
}
@mixin product {
  article {
    transition: transition($medium, box-shadow);
    height: 410px;
    border: 1px solid rgba($color-5, 0.15);
    padding: 30px 20px;
    display: grid;
    place-items: center;
    grid-template-rows: 1fr 0.5fr 0.2fr 0.3fr 0.4fr;
    &:hover {
      box-shadow: $light-box-shadow;
    }
    h3 {
      @include header($font-size: var(--font-15), $letter-spacing: 0.05em);
      line-height: 20px;
      text-align: center;
    }
    img {
      grid-row: 1;
    }
    p {
      font-size: var(--font-15);
      font-weight: 700;
    }
    span {
      margin-left: 10px;
      font-size: 12px;
      color: $color-7;
      place-self: end center;
      gap: 10px;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    a {
      transition: transition($short, background-color), transition($short, color);
      @include button($background: $color-2, $background-hover: $color-3, $color-hover: $color-1);
    }
  }
}

