@import "variables";
nav {
  width: 100%;
  place-items: center;
  display: grid;
  grid-template-columns: repeat(3, 1fr) 0.6fr 0.7fr 0.4fr;
  position: fixed;
  top: 0;
  z-index: 2;
  padding: 15px 7%;
  background-color: $color-5;
  img {
    transition: transition($long, transform);
    place-self: center start;
    &:hover {
      transform: scale(0.96);
    }
  }
  *:not(input, label) {
    cursor: pointer;
    user-select: none;
  }
  a {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  label, ul, ul a, .hamburger {
    display: flex;
    &:not(ul) {
      justify-content: center;
    }
    align-items: center;
  }
  label {
    grid-column: 4 / span 1;
    color: $color-1;
    input::placeholder {
      color: inherit;
      text-transform: lowercase;
    }
  }
  ul {
    place-self: center end;
    width: 60%;
    justify-content: space-evenly;
    list-style: none;
  }
  svg {
    width: 30%;
    min-width: 20px;
    height: auto;
    min-height: 20px;
    transition: transition($medium, color);
    color: $color-1;
    &:hover {
      color: $color-3;
    }
  }
  .hamburger {
    row-gap: 5px;
    flex-direction: column;
    width: 28px;
    height: 20px;
    grid-column: 6 / span 1;
    &:hover span {
      background-color: $color-3;
    }
    span {
      transition: transition($medium, background-color);
      display: inline-block;
      width: 100%;
      height: 2px;
      background-color: $color-1;
    }
  }
}
footer {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  grid-template-rows: 0.5fr 1fr 0.05fr 0.5fr 0.05fr 0.1fr;
  position: relative;
  background-image: url("/assets/pictures/noze.webp");
  background-size: cover;
  background-position: center;
  color: $color-1;
  padding: 70px 140px 15px 140px;
  @include element-index;
  &::before {
    @include shadow(rgba($color-5, 0.7));
  }
  & > img {
    grid-column: 1 / span 2;
  }
  h3 {
    font-weight: 600;
  }
  p {
    font-size: 13px;
    line-height: 26px;
    &:first-of-type {
      grid-column: 1 / -1;
      place-self: center start;
    }
    &:nth-of-type(2) {
      grid-column: 1 / span 2;
      grid-row: 7 / span 1;
    }
    &:last-of-type {
      place-self: center end;
      grid-column: 10 / span 2;
      grid-row: 7 / span 1;
    }
  }
  ul {
    list-style: none;
    li {
      font-size: 15px;
      a {
        transition: transition($short, color);
        &:hover {
          color: $color-3;
        }
      }
    }
    &:first-of-type {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(4, 36px);
      grid-column: 4 / span 3;
    }
    &:nth-of-type(2) {
      place-self: start center;
      li {
        margin: 18px 0;
        &:first-of-type {
          margin-top: 0;
        }
        &:last-of-type {
          margin-bottom: 0;
        }
      }
      grid-column: 7 / span 2;
    }
  }
  h3 {
    font-size: 22px;
    &:first-of-type {
      grid-column: 4 / span 1;
    }
    &:nth-of-type(2) {
      place-self: start center;
      grid-column: 7 / span 2;
    }
    &:last-of-type {
      grid-column: 10 / span 2;
    }
  }
  figure {
    grid-column: 10 / span 1;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(3, 1fr);
    column-gap: 45px;
    row-gap: 25px;
  }
  hr {
    border: 0;
    border-bottom: 1px solid rgba($color-1, 0.2);
    grid-column: 1 / -1;
    &:first-of-type {
      grid-row: 3 / span 1;
    }
    &:last-of-type {
      grid-row: 5 / span 1;
    }
  }
}
